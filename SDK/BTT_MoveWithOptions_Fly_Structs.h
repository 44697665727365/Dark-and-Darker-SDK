#pragma once 
#include <SDK_Engine_Objects.h> 
 
 
// Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.SetDestination
struct FSetDestination
{
	int32_t Temp_int_Variable;  // 0x0 (0x0)
	int32_t CallFunc_Add_IntInt_ReturnValue;  // 0x4 (0x4)
	char pad_8_1 : 7;  // 0x8 (0x8)
	bool CallFunc_LessEqual_IntInt_ReturnValue : 1;  // 0x8 (0x8)
	char pad_9_1 : 7;  // 0x9 (0x9)
	bool Temp_bool_Variable : 1;  // 0x9 (0x9)
	char pad_10_1 : 7;  // 0xA (0xA)
	bool CallFunc_Not_PreBool_ReturnValue : 1;  // 0xA (0xA)
	char pad_11_1 : 7;  // 0xB (0xB)
	bool CallFunc_BooleanAND_ReturnValue : 1;  // 0xB (0xB)
	char pad_12[4];  // 0xC (0xC)
	struct UObject* CallFunc_GetValueAsObject_ReturnValue;  // 0x10 (0x10)
	struct ADCCharacterBase* K2Node_DynamicCast_AsDCCharacter_Base;  // 0x18 (0x18)
	char pad_32_1 : 7;  // 0x20 (0x20)
	bool K2Node_DynamicCast_bSuccess : 1;  // 0x20 (0x20)
	char pad_33[3];  // 0x21 (0x21)
	struct FName CallFunc_MakeLiteralName_ReturnValue;  // 0x24 (0x24)
	char pad_44[4];  // 0x2C (0x2C)
	struct FVector CallFunc_GetValueAsVector_ReturnValue;  // 0x30 (0x30)
	char pad_72_1 : 7;  // 0x48 (0x48)
	bool CallFunc_CheckObjects_Result : 1;  // 0x48 (0x48)
	char pad_73[7];  // 0x49 (0x49)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue;  // 0x50 (0x50)
	double CallFunc_BreakVector_X;  // 0x68 (0x68)
	double CallFunc_BreakVector_Y;  // 0x70 (0x70)
	double CallFunc_BreakVector_Z;  // 0x78 (0x78)
	struct FVector CallFunc_GetActorUpVector_ReturnValue;  // 0x80 (0x80)
	struct FVector CallFunc_GetActorRightVector_ReturnValue;  // 0x98 (0x98)
	struct FVector CallFunc_Multiply_VectorFloat_ReturnValue;  // 0xB0 (0xB0)
	struct FVector CallFunc_Multiply_VectorFloat_ReturnValue_2;  // 0xC8 (0xC8)
	struct FVector CallFunc_GetActorForwardVector_ReturnValue;  // 0xE0 (0xE0)
	struct FVector CallFunc_Multiply_VectorFloat_ReturnValue_3;  // 0xF8 (0xF8)
	struct FVector CallFunc_Add_VectorVector_ReturnValue;  // 0x110 (0x110)
	struct FVector CallFunc_Add_VectorVector_ReturnValue_2;  // 0x128 (0x128)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue_2;  // 0x140 (0x140)
	struct FVector CallFunc_Add_VectorVector_ReturnValue_3;  // 0x158 (0x158)
	double CallFunc_BreakVector_X_2;  // 0x170 (0x170)
	double CallFunc_BreakVector_Y_2;  // 0x178 (0x178)
	double CallFunc_BreakVector_Z_2;  // 0x180 (0x180)
	double CallFunc_BreakVector_X_3;  // 0x188 (0x188)
	double CallFunc_BreakVector_Y_3;  // 0x190 (0x190)
	double CallFunc_BreakVector_Z_3;  // 0x198 (0x198)
	struct FVector CallFunc_MakeVector_ReturnValue;  // 0x1A0 (0x1A0)
	double CallFunc_RandomFloatInRange_ReturnValue;  // 0x1B8 (0x1B8)
	double CallFunc_RandomFloatInRange_ReturnValue_2;  // 0x1C0 (0x1C0)
	double CallFunc_RandomFloatInRange_ReturnValue_3;  // 0x1C8 (0x1C8)
	struct FVector CallFunc_MakeVector_ReturnValue_2;  // 0x1D0 (0x1D0)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue_3;  // 0x1E8 (0x1E8)
	struct FVector CallFunc_Multiply_VectorFloat_ReturnValue_4;  // 0x200 (0x200)
	struct FVector CallFunc_Add_VectorVector_ReturnValue_4;  // 0x218 (0x218)
	double CallFunc_RandomFloatInRange_ReturnValue_4;  // 0x230 (0x230)
	double CallFunc_RandomFloatInRange_ReturnValue_5;  // 0x238 (0x238)
	double CallFunc_RandomFloatInRange_ReturnValue_6;  // 0x240 (0x240)
	struct FVector CallFunc_MakeVector_ReturnValue_3;  // 0x248 (0x248)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue_4;  // 0x260 (0x260)
	struct FVector CallFunc_Multiply_VectorFloat_ReturnValue_5;  // 0x278 (0x278)
	double CallFunc_Vector_Distance_ReturnValue;  // 0x290 (0x290)
	char pad_664_1 : 7;  // 0x298 (0x298)
	bool CallFunc_LessEqual_DoubleDouble_ReturnValue : 1;  // 0x298 (0x298)
	char pad_665[7];  // 0x299 (0x299)
	struct FVector CallFunc_Add_VectorVector_ReturnValue_5;  // 0x2A0 (0x2A0)
	struct FVector CallFunc_GetValueAsVector_ReturnValue_2;  // 0x2B8 (0x2B8)
	char pad_720_1 : 7;  // 0x2D0 (0x2D0)
	bool K2Node_SwitchEnum_CmpSuccess : 1;  // 0x2D0 (0x2D0)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.OnTaskFinished
// Size: 0x11(Inherited: 0x18)
struct FOnTaskFinished : FOnTaskFinished
{
	struct AAIController* OwnerController;  // 0x0 (0x0)
	struct APawn* ControlledPawn;  // 0x8 (0x8)
	enum class EBTNodeResult TaskResult;  // 0x10 (0x10)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.ExecuteUbergraph_BTT_MoveWithOptions_Fly
struct FExecuteUbergraph_BTT_MoveWithOptions_Fly
{
	int32_t EntryPoint;  // 0x0 (0x0)
	char pad_4[4];  // 0x4 (0x4)
	struct FTimerHandle CallFunc_K2_SetTimer_ReturnValue;  // 0x8 (0x8)
	struct FRotator CallFunc_MakeRotator_ReturnValue;  // 0x10 (0x10)
	struct FRotator CallFunc_MakeRotator_ReturnValue_2;  // 0x28 (0x28)
	char pad_64_1 : 7;  // 0x40 (0x40)
	bool Temp_bool_Variable : 1;  // 0x40 (0x40)
	char pad_65[3];  // 0x41 (0x41)
	struct FDelegate K2Node_CreateDelegate_OutputDelegate;  // 0x44 (0x44)
	char pad_84[4];  // 0x54 (0x54)
	struct AAIController* K2Node_Event_OwnerController_3;  // 0x58 (0x58)
	struct APawn* K2Node_Event_ControlledPawn_3;  // 0x60 (0x60)
	struct UAbilityAsync_WaitGameplayEvent* CallFunc_WaitGameplayEventToActor_ReturnValue;  // 0x68 (0x68)
	struct ABP_DCMonsterBaseWithOptions_C* K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options;  // 0x70 (0x70)
	char pad_120_1 : 7;  // 0x78 (0x78)
	bool K2Node_DynamicCast_bSuccess : 1;  // 0x78 (0x78)
	char pad_121_1 : 7;  // 0x79 (0x79)
	bool CallFunc_IsValid_ReturnValue : 1;  // 0x79 (0x79)
	char pad_122[6];  // 0x7A (0x7A)
	struct FString CallFunc_Conv_DoubleToString_ReturnValue;  // 0x80 (0x80)
	struct FTimerHandle CallFunc_K2_SetTimer_ReturnValue_2;  // 0x90 (0x90)
	char pad_152_1 : 7;  // 0x98 (0x98)
	bool K2Node_SwitchString_CmpSuccess : 1;  // 0x98 (0x98)
	char pad_153_1 : 7;  // 0x99 (0x99)
	bool CallFunc_LessEqual_DoubleDouble_ReturnValue : 1;  // 0x99 (0x99)
	char pad_154[6];  // 0x9A (0x9A)
	struct AAIController* K2Node_Event_OwnerController_2;  // 0xA0 (0xA0)
	struct APawn* K2Node_Event_ControlledPawn_2;  // 0xA8 (0xA8)
	float K2Node_Event_DeltaSeconds;  // 0xB0 (0xB0)
	char pad_180[4];  // 0xB4 (0xB4)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue;  // 0xB8 (0xB8)
	float CallFunc_BreakRotator_Roll;  // 0xD0 (0xD0)
	float CallFunc_BreakRotator_Pitch;  // 0xD4 (0xD4)
	float CallFunc_BreakRotator_Yaw;  // 0xD8 (0xD8)
	char pad_220[4];  // 0xDC (0xDC)
	struct FRotator CallFunc_MakeRotator_ReturnValue_3;  // 0xE0 (0xE0)
	struct UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue;  // 0xF8 (0xF8)
	double CallFunc_GetWorldDeltaSeconds_ReturnValue;  // 0x100 (0x100)
	double CallFunc_GetWorldDeltaSeconds_ReturnValue_2;  // 0x108 (0x108)
	struct FRotator CallFunc_RInterpTo_ReturnValue;  // 0x110 (0x110)
	float CallFunc_BreakRotator_Roll_2;  // 0x128 (0x128)
	float CallFunc_BreakRotator_Pitch_2;  // 0x12C (0x12C)
	float CallFunc_BreakRotator_Yaw_2;  // 0x130 (0x130)
	char pad_308[4];  // 0x134 (0x134)
	double CallFunc_Check_Remain_Distance_3D_ResultDistance;  // 0x138 (0x138)
	struct FRotator CallFunc_MakeRotator_ReturnValue_4;  // 0x140 (0x140)
	char pad_344_1 : 7;  // 0x158 (0x158)
	bool CallFunc_K2_SetActorRotation_ReturnValue : 1;  // 0x158 (0x158)
	char pad_345[7];  // 0x159 (0x159)
	struct UObject* CallFunc_GetValueAsObject_ReturnValue;  // 0x160 (0x160)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue;  // 0x168 (0x168)
	struct ADCCharacterBase* K2Node_DynamicCast_AsDCCharacter_Base;  // 0x180 (0x180)
	char pad_392_1 : 7;  // 0x188 (0x188)
	bool K2Node_DynamicCast_bSuccess_2 : 1;  // 0x188 (0x188)
	char pad_393[7];  // 0x189 (0x189)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue_2;  // 0x190 (0x190)
	char pad_424_1 : 7;  // 0x1A8 (0x1A8)
	bool K2Node_SwitchEnum_CmpSuccess : 1;  // 0x1A8 (0x1A8)
	char pad_425[7];  // 0x1A9 (0x1A9)
	struct FVector CallFunc_Subtract_VectorVector_ReturnValue;  // 0x1B0 (0x1B0)
	struct FVector CallFunc_Normal_ReturnValue;  // 0x1C8 (0x1C8)
	double CallFunc_GetWorldDeltaSeconds_ReturnValue_3;  // 0x1E0 (0x1E0)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue_2;  // 0x1E8 (0x1E8)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue_3;  // 0x200 (0x200)
	float CallFunc_BreakRotator_Roll_3;  // 0x218 (0x218)
	float CallFunc_BreakRotator_Pitch_3;  // 0x21C (0x21C)
	float CallFunc_BreakRotator_Yaw_3;  // 0x220 (0x220)
	float CallFunc_BreakRotator_Roll_4;  // 0x224 (0x224)
	float CallFunc_BreakRotator_Pitch_4;  // 0x228 (0x228)
	float CallFunc_BreakRotator_Yaw_4;  // 0x22C (0x22C)
	struct FRotator CallFunc_MakeRotator_ReturnValue_5;  // 0x230 (0x230)
	struct FRotator CallFunc_MakeRotator_ReturnValue_6;  // 0x248 (0x248)
	char pad_608_1 : 7;  // 0x260 (0x260)
	bool CallFunc_EqualEqual_RotatorRotator_ReturnValue : 1;  // 0x260 (0x260)
	char pad_609[7];  // 0x261 (0x261)
	struct FRotator CallFunc_MakeRotator_ReturnValue_7;  // 0x268 (0x268)
	struct FRotator CallFunc_RInterpTo_ReturnValue_2;  // 0x280 (0x280)
	float CallFunc_BreakRotator_Roll_5;  // 0x298 (0x298)
	float CallFunc_BreakRotator_Pitch_5;  // 0x29C (0x29C)
	float CallFunc_BreakRotator_Yaw_5;  // 0x2A0 (0x2A0)
	char pad_676[4];  // 0x2A4 (0x2A4)
	struct FRotator CallFunc_MakeRotator_ReturnValue_8;  // 0x2A8 (0x2A8)
	char pad_704_1 : 7;  // 0x2C0 (0x2C0)
	bool CallFunc_K2_SetActorRotation_ReturnValue_2 : 1;  // 0x2C0 (0x2C0)
	char pad_705[7];  // 0x2C1 (0x2C1)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue_4;  // 0x2C8 (0x2C8)
	float CallFunc_BreakRotator_Roll_6;  // 0x2E0 (0x2E0)
	float CallFunc_BreakRotator_Pitch_6;  // 0x2E4 (0x2E4)
	float CallFunc_BreakRotator_Yaw_6;  // 0x2E8 (0x2E8)
	char pad_748[4];  // 0x2EC (0x2EC)
	struct FRotator CallFunc_MakeRotator_ReturnValue_9;  // 0x2F0 (0x2F0)
	char pad_776_1 : 7;  // 0x308 (0x308)
	bool CallFunc_EqualEqual_RotatorRotator_ReturnValue_2 : 1;  // 0x308 (0x308)
	char pad_777[3];  // 0x309 (0x309)
	float CallFunc_GetDistanceTo_ReturnValue;  // 0x30C (0x30C)
	char pad_784_1 : 7;  // 0x310 (0x310)
	bool CallFunc_LessEqual_DoubleDouble_ReturnValue_2 : 1;  // 0x310 (0x310)
	char pad_785_1 : 7;  // 0x311 (0x311)
	bool CallFunc_LessEqual_DoubleDouble_ReturnValue_3 : 1;  // 0x311 (0x311)
	char pad_786[6];  // 0x312 (0x312)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue_5;  // 0x318 (0x318)
	float CallFunc_BreakRotator_Roll_7;  // 0x330 (0x330)
	float CallFunc_BreakRotator_Pitch_7;  // 0x334 (0x334)
	float CallFunc_BreakRotator_Yaw_7;  // 0x338 (0x338)
	char pad_828[4];  // 0x33C (0x33C)
	struct FRotator CallFunc_MakeRotator_ReturnValue_10;  // 0x340 (0x340)
	struct UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue_2;  // 0x358 (0x358)
	double CallFunc_GetWorldDeltaSeconds_ReturnValue_4;  // 0x360 (0x360)
	struct FRotator CallFunc_RInterpTo_ReturnValue_3;  // 0x368 (0x368)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue_6;  // 0x380 (0x380)
	float CallFunc_BreakRotator_Roll_8;  // 0x398 (0x398)
	float CallFunc_BreakRotator_Pitch_8;  // 0x39C (0x39C)
	float CallFunc_BreakRotator_Yaw_8;  // 0x3A0 (0x3A0)
	float CallFunc_BreakRotator_Roll_9;  // 0x3A4 (0x3A4)
	float CallFunc_BreakRotator_Pitch_9;  // 0x3A8 (0x3A8)
	float CallFunc_BreakRotator_Yaw_9;  // 0x3AC (0x3AC)
	struct FRotator CallFunc_MakeRotator_ReturnValue_11;  // 0x3B0 (0x3B0)
	struct FRotator CallFunc_MakeRotator_ReturnValue_12;  // 0x3C8 (0x3C8)
	char pad_992_1 : 7;  // 0x3E0 (0x3E0)
	bool CallFunc_K2_SetActorRotation_ReturnValue_3 : 1;  // 0x3E0 (0x3E0)
	char pad_993_1 : 7;  // 0x3E1 (0x3E1)
	bool CallFunc_EqualEqual_RotatorRotator_ReturnValue_3 : 1;  // 0x3E1 (0x3E1)
	char pad_994[2];  // 0x3E2 (0x3E2)
	float CallFunc_GetValueAsFloat_ReturnValue;  // 0x3E4 (0x3E4)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue_7;  // 0x3E8 (0x3E8)
	float CallFunc_BreakRotator_Roll_10;  // 0x400 (0x400)
	float CallFunc_BreakRotator_Pitch_10;  // 0x404 (0x404)
	float CallFunc_BreakRotator_Yaw_10;  // 0x408 (0x408)
	char pad_1036[4];  // 0x40C (0x40C)
	struct FRotator CallFunc_MakeRotator_ReturnValue_13;  // 0x410 (0x410)
	char pad_1064_1 : 7;  // 0x428 (0x428)
	bool CallFunc_K2_SetActorRotation_ReturnValue_4 : 1;  // 0x428 (0x428)
	char pad_1065[7];  // 0x429 (0x429)
	struct FTimerHandle CallFunc_K2_SetTimerDelegate_ReturnValue;  // 0x430 (0x430)
	struct TScriptInterface<IGameplayTagAssetInterface> K2Node_DynamicCast_As_________________;  // 0x438 (0x438)
	char pad_1096_1 : 7;  // 0x448 (0x448)
	bool K2Node_DynamicCast_bSuccess_3 : 1;  // 0x448 (0x448)
	char pad_1097_1 : 7;  // 0x449 (0x449)
	bool CallFunc_HasMatchingGameplayTag_ReturnValue : 1;  // 0x449 (0x449)
	char pad_1098_1 : 7;  // 0x44A (0x44A)
	bool CallFunc_FilterUnTagedTargets_ReturnValue : 1;  // 0x44A (0x44A)
	char pad_1099_1 : 7;  // 0x44B (0x44B)
	bool CallFunc_GetAllTargetArray_ReturnValue : 1;  // 0x44B (0x44B)
	char pad_1100_1 : 7;  // 0x44C (0x44C)
	bool CallFunc_FilterTargetsWithinDistance_ReturnValue : 1;  // 0x44C (0x44C)
	char pad_1101[3];  // 0x44D (0x44D)
	int32_t CallFunc_Array_Length_ReturnValue;  // 0x450 (0x450)
	char pad_1108_1 : 7;  // 0x454 (0x454)
	bool CallFunc_GreaterEqual_IntInt_ReturnValue : 1;  // 0x454 (0x454)
	char pad_1109[3];  // 0x455 (0x455)
	struct AAIController* K2Node_Event_OwnerController;  // 0x458 (0x458)
	struct APawn* K2Node_Event_ControlledPawn;  // 0x460 (0x460)
	enum class EBTNodeResult K2Node_Event_TaskResult;  // 0x468 (0x468)
	char pad_1129[7];  // 0x469 (0x469)
	struct UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue;  // 0x470 (0x470)
	char pad_1144_1 : 7;  // 0x478 (0x478)
	bool CallFunc_Greater_DoubleDouble_ReturnValue : 1;  // 0x478 (0x478)
	char pad_1145[7];  // 0x479 (0x479)
	struct FGameplayEventData Temp_struct_Variable;  // 0x480 (0x480)
	char pad_1328_1 : 7;  // 0x530 (0x530)
	bool K2Node_SwitchEnum_CmpSuccess_2 : 1;  // 0x530 (0x530)
	char pad_1329_1 : 7;  // 0x531 (0x531)
	bool CallFunc_EqualEqual_DoubleDouble_ReturnValue : 1;  // 0x531 (0x531)
	char pad_1330[6];  // 0x532 (0x532)
	struct FGameplayEventData K2Node_CustomEvent_Payload;  // 0x538 (0x538)
	char pad_1512_1 : 7;  // 0x5E8 (0x5E8)
	bool CallFunc_IsValid_ReturnValue_2 : 1;  // 0x5E8 (0x5E8)
	char pad_1513[3];  // 0x5E9 (0x5E9)
	struct FDelegate K2Node_CreateDelegate_OutputDelegate_2;  // 0x5EC (0x5EC)
	float CallFunc_K2_SetTimer_Time_ImplicitCast;  // 0x5FC (0x5FC)
	float CallFunc_RInterpTo_DeltaTime_ImplicitCast;  // 0x600 (0x600)
	float CallFunc_RInterpTo_DeltaTime_ImplicitCast_2;  // 0x604 (0x604)
	float CallFunc_MakeRotator_Pitch_ImplicitCast;  // 0x608 (0x608)
	float CallFunc_MakeRotator_Pitch_ImplicitCast_2;  // 0x60C (0x60C)
	double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;  // 0x610 (0x610)
	float CallFunc_RInterpTo_DeltaTime_ImplicitCast_3;  // 0x618 (0x618)
	char pad_1564[4];  // 0x61C (0x61C)
	double K2Node_VariableSet_MaxDistance_RandomMove_ImplicitCast;  // 0x620 (0x620)
	float CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;  // 0x628 (0x628)
	float CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast;  // 0x62C (0x62C)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.Check Invisible Target
struct FCheck Invisible Target
{
	char pad_0_1 : 7;  // 0x0 (0x0)
	bool CallFunc_Check_Target_Has_State_Tags_To_Lose_From_Array_Result : 1;  // 0x0 (0x0)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.ClearVariables
struct FClearVariables
{
	struct UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue;  // 0x0 (0x0)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.Check Remain Distance 3D
struct FCheck Remain Distance 3D
{
	struct APawn* OwnerActor;  // 0x0 (0x0)
	double DeltaTime;  // 0x8 (0x8)
	double ResultDistance;  // 0x10 (0x10)
	struct FVector MovableLocation;  // 0x18 (0x18)
	struct UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue;  // 0x30 (0x30)
	double CallFunc_VSizeXY_ReturnValue;  // 0x38 (0x38)
	float CallFunc_GetMaxSpeed_ReturnValue;  // 0x40 (0x40)
	char pad_68[4];  // 0x44 (0x44)
	double CallFunc_Multiply_DoubleDouble_ReturnValue;  // 0x48 (0x48)
	double CallFunc_Subtract_DoubleDouble_ReturnValue;  // 0x50 (0x50)
	double CallFunc_VSize_ReturnValue;  // 0x58 (0x58)
	double CallFunc_Subtract_DoubleDouble_ReturnValue_2;  // 0x60 (0x60)
	struct FVector CallFunc_Multiply_VectorFloat_ReturnValue;  // 0x68 (0x68)
	double CallFunc_Multiply_DoubleDouble_B_ImplicitCast;  // 0x80 (0x80)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.CheckObjects
struct FCheckObjects
{
	struct APawn* OwnerActor;  // 0x0 (0x0)
	char pad_8_1 : 7;  // 0x8 (0x8)
	bool Result : 1;  // 0x8 (0x8)
	char pad_9[7];  // 0x9 (0x9)
	struct FVector ActorLocation;  // 0x10 (0x10)
	struct TArray<struct AActor*> K2Node_MakeArray_Array;  // 0x28 (0x28)
	double CallFunc_BreakVector_X;  // 0x38 (0x38)
	double CallFunc_BreakVector_Y;  // 0x40 (0x40)
	double CallFunc_BreakVector_Z;  // 0x48 (0x48)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue;  // 0x50 (0x50)
	double CallFunc_Subtract_DoubleDouble_ReturnValue;  // 0x68 (0x68)
	struct FVector CallFunc_MakeVector_ReturnValue;  // 0x70 (0x70)
	struct ADCMonsterBase* K2Node_DynamicCast_AsDCMonster_Base;  // 0x88 (0x88)
	char pad_144_1 : 7;  // 0x90 (0x90)
	bool K2Node_DynamicCast_bSuccess : 1;  // 0x90 (0x90)
	char pad_145[7];  // 0x91 (0x91)
	struct FVector CallFunc_Subtract_VectorVector_ReturnValue;  // 0x98 (0x98)
	struct FVector CallFunc_Normal_ReturnValue;  // 0xB0 (0xB0)
	double CallFunc_BreakVector_X_2;  // 0xC8 (0xC8)
	double CallFunc_BreakVector_Y_2;  // 0xD0 (0xD0)
	double CallFunc_BreakVector_Z_2;  // 0xD8 (0xD8)
	double CallFunc_Multiply_DoubleDouble_ReturnValue;  // 0xE0 (0xE0)
	struct TArray<enum class EObjectTypeQuery> K2Node_MakeArray_Array_2;  // 0xE8 (0xE8)
	struct FVector CallFunc_MakeVector_ReturnValue_2;  // 0xF8 (0xF8)
	struct FHitResult CallFunc_SphereTraceSingleForObjects_OutHit;  // 0x110 (0x110)
	char pad_504_1 : 7;  // 0x1F8 (0x1F8)
	bool CallFunc_SphereTraceSingleForObjects_ReturnValue : 1;  // 0x1F8 (0x1F8)
	char pad_505_1 : 7;  // 0x1F9 (0x1F9)
	bool CallFunc_BreakHitResult_bBlockingHit : 1;  // 0x1F9 (0x1F9)
	char pad_506_1 : 7;  // 0x1FA (0x1FA)
	bool CallFunc_BreakHitResult_bInitialOverlap : 1;  // 0x1FA (0x1FA)
	char pad_507[1];  // 0x1FB (0x1FB)
	float CallFunc_BreakHitResult_Time;  // 0x1FC (0x1FC)
	float CallFunc_BreakHitResult_Distance;  // 0x200 (0x200)
	char pad_516[4];  // 0x204 (0x204)
	struct FVector CallFunc_BreakHitResult_Location;  // 0x208 (0x208)
	struct FVector CallFunc_BreakHitResult_ImpactPoint;  // 0x220 (0x220)
	struct FVector CallFunc_BreakHitResult_Normal;  // 0x238 (0x238)
	struct FVector CallFunc_BreakHitResult_ImpactNormal;  // 0x250 (0x250)
	struct UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat;  // 0x268 (0x268)
	struct AActor* CallFunc_BreakHitResult_HitActor;  // 0x270 (0x270)
	struct UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent;  // 0x278 (0x278)
	struct FName CallFunc_BreakHitResult_HitBoneName;  // 0x280 (0x280)
	struct FName CallFunc_BreakHitResult_BoneName;  // 0x288 (0x288)
	int32_t CallFunc_BreakHitResult_HitItem;  // 0x290 (0x290)
	int32_t CallFunc_BreakHitResult_ElementIndex;  // 0x294 (0x294)
	int32_t CallFunc_BreakHitResult_FaceIndex;  // 0x298 (0x298)
	char pad_668[4];  // 0x29C (0x29C)
	struct FVector CallFunc_BreakHitResult_TraceStart;  // 0x2A0 (0x2A0)
	struct FVector CallFunc_BreakHitResult_TraceEnd;  // 0x2B8 (0x2B8)
	struct FHitResult CallFunc_SphereTraceSingleForObjects_OutHit_2;  // 0x2D0 (0x2D0)
	char pad_952_1 : 7;  // 0x3B8 (0x3B8)
	bool CallFunc_SphereTraceSingleForObjects_ReturnValue_2 : 1;  // 0x3B8 (0x3B8)
	char pad_953[7];  // 0x3B9 (0x3B9)
	double CallFunc_Subtract_DoubleDouble_ReturnValue_2;  // 0x3C0 (0x3C0)
	struct FVector CallFunc_Multiply_VectorFloat_ReturnValue;  // 0x3C8 (0x3C8)
	char pad_992_1 : 7;  // 0x3E0 (0x3E0)
	bool CallFunc_LessEqual_DoubleDouble_ReturnValue : 1;  // 0x3E0 (0x3E0)
	char pad_993[7];  // 0x3E1 (0x3E1)
	struct FVector CallFunc_Add_VectorVector_ReturnValue;  // 0x3E8 (0x3E8)
	double CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;  // 0x400 (0x400)
	double CallFunc_Subtract_DoubleDouble_B_ImplicitCast;  // 0x408 (0x408)
	double CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;  // 0x410 (0x410)
	double CallFunc_Subtract_DoubleDouble_A_ImplicitCast;  // 0x418 (0x418)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.EventReceived_DFF4174A4768D303B7BF7C8C1C1E69D4
struct FEventReceived_DFF4174A4768D303B7BF7C8C1C1E69D4
{
	struct FGameplayEventData Payload;  // 0x0 (0x0)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.CheckStopTime
struct FCheckStopTime
{
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue;  // 0x0 (0x0)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue_2;  // 0x18 (0x18)
	float CallFunc_BreakRotator_Roll;  // 0x30 (0x30)
	float CallFunc_BreakRotator_Pitch;  // 0x34 (0x34)
	float CallFunc_BreakRotator_Yaw;  // 0x38 (0x38)
	float CallFunc_BreakRotator_Roll_2;  // 0x3C (0x3C)
	float CallFunc_BreakRotator_Pitch_2;  // 0x40 (0x40)
	float CallFunc_BreakRotator_Yaw_2;  // 0x44 (0x44)
	struct FRotator CallFunc_MakeRotator_ReturnValue;  // 0x48 (0x48)
	struct FRotator CallFunc_MakeRotator_ReturnValue_2;  // 0x60 (0x60)
	char pad_120_1 : 7;  // 0x78 (0x78)
	bool CallFunc_EqualEqual_RotatorRotator_ReturnValue : 1;  // 0x78 (0x78)
	char pad_121_1 : 7;  // 0x79 (0x79)
	bool CallFunc_K2_SetActorRotation_ReturnValue : 1;  // 0x79 (0x79)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.ReceiveExecuteAI
// Size: 0x10(Inherited: 0x10)
struct FReceiveExecuteAI : FReceiveExecuteAI
{
	struct AAIController* OwnerController;  // 0x0 (0x0)
	struct APawn* ControlledPawn;  // 0x8 (0x8)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.ReceiveTickAI
// Size: 0x14(Inherited: 0x18)
struct FReceiveTickAI : FReceiveTickAI
{
	struct AAIController* OwnerController;  // 0x0 (0x0)
	struct APawn* ControlledPawn;  // 0x8 (0x8)
	float DeltaSeconds;  // 0x10 (0x10)


}; 
 
 // Function BTT_MoveWithOptions_Fly.BTT_MoveWithOptions_Fly_C.SetRemainDistance
struct FSetRemainDistance
{
	char pad_0_1 : 7;  // 0x0 (0x0)
	bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue : 1;  // 0x0 (0x0)
	char pad_1[7];  // 0x1 (0x1)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue;  // 0x8 (0x8)
	struct FVector CallFunc_Subtract_VectorVector_ReturnValue;  // 0x20 (0x20)
	double CallFunc_VSize_ReturnValue;  // 0x38 (0x38)
	char pad_64_1 : 7;  // 0x40 (0x40)
	bool K2Node_SwitchEnum_CmpSuccess : 1;  // 0x40 (0x40)
	char pad_65[7];  // 0x41 (0x41)
	struct FVector CallFunc_Normal_ReturnValue;  // 0x48 (0x48)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue_2;  // 0x60 (0x60)
	struct FVector CallFunc_Subtract_VectorVector_ReturnValue_2;  // 0x78 (0x78)
	struct FVector CallFunc_Normal_ReturnValue_2;  // 0x90 (0x90)
	double CallFunc_VSize_ReturnValue_2;  // 0xA8 (0xA8)


}; 
 
 