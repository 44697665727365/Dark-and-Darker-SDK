#pragma once 
#include <SDK_Engine_Objects.h> 
 
 
// Function GA_Cockatrice_Roar.GA_Cockatrice_Roar_C.AbilityActivated
// Size: 0xB0(Inherited: 0xB0)
struct FAbilityActivated : FAbilityActivated
{
	struct FGameplayEventData TriggerEventData;  // 0x0 (0x0)


}; 
 
 // Function GA_Cockatrice_Roar.GA_Cockatrice_Roar_C.EventReceived_F5F8C00F4E6E100DC493D8A5F327CBE9
struct FEventReceived_F5F8C00F4E6E100DC493D8A5F327CBE9
{
	struct FGameplayEventData Payload;  // 0x0 (0x0)


}; 
 
 // Function GA_Cockatrice_Roar.GA_Cockatrice_Roar_C.ExecuteUbergraph_GA_Cockatrice_Roar
struct FExecuteUbergraph_GA_Cockatrice_Roar
{
	int32_t EntryPoint;  // 0x0 (0x0)
	char pad_4[4];  // 0x4 (0x4)
	struct TArray<struct AActor*> Temp_object_Variable;  // 0x8 (0x8)
	struct AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x18 (0x18)
	struct TArray<struct AActor*> Temp_object_Variable_2;  // 0x20 (0x20)
	struct FTransform CallFunc_GetTransform_ReturnValue;  // 0x30 (0x30)
	struct TArray<enum class EObjectTypeQuery> K2Node_MakeArray_Array;  // 0x90 (0x90)
	struct FVector CallFunc_BreakTransform_Location;  // 0xA0 (0xA0)
	struct FRotator CallFunc_BreakTransform_Rotation;  // 0xB8 (0xB8)
	struct FVector CallFunc_BreakTransform_Scale;  // 0xD0 (0xD0)
	struct FVector CallFunc_Conv_FloatToVector_ReturnValue;  // 0xE8 (0xE8)
	struct TArray<enum class EObjectTypeQuery> K2Node_MakeArray_Array_2;  // 0x100 (0x100)
	struct FGameplayEventData K2Node_Event_TriggerEventData;  // 0x110 (0x110)
	struct AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue_2;  // 0x1C0 (0x1C0)
	char pad_456_1 : 7;  // 0x1C8 (0x1C8)
	bool CallFunc_Get_Enemies_In_Range_And_Angle_Result : 1;  // 0x1C8 (0x1C8)
	char pad_457[7];  // 0x1C9 (0x1C9)
	struct TArray<struct ADCCharacterBase*> CallFunc_Get_Enemies_In_Range_And_Angle_DCCharacterBase;  // 0x1D0 (0x1D0)
	struct AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue_3;  // 0x1E0 (0x1E0)
	int32_t CallFunc_Array_Length_ReturnValue;  // 0x1E8 (0x1E8)
	char pad_492[4];  // 0x1EC (0x1EC)
	struct ABP_DCMonsterBaseWithOptions_C* K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options;  // 0x1F0 (0x1F0)
	char pad_504_1 : 7;  // 0x1F8 (0x1F8)
	bool K2Node_DynamicCast_bSuccess : 1;  // 0x1F8 (0x1F8)
	char pad_505[3];  // 0x1F9 (0x1F9)
	int32_t CallFunc_Subtract_IntInt_ReturnValue;  // 0x1FC (0x1FC)
	int32_t CallFunc_Max_ReturnValue;  // 0x200 (0x200)
	int32_t Temp_int_Array_Index_Variable;  // 0x204 (0x204)
	struct FVector CallFunc_GetCapsuleBottomLocation_ReturnValue;  // 0x208 (0x208)
	struct ADCCharacterBase* CallFunc_Array_Get_Item;  // 0x220 (0x220)
	double CallFunc_BreakVector_X;  // 0x228 (0x228)
	double CallFunc_BreakVector_Y;  // 0x230 (0x230)
	double CallFunc_BreakVector_Z;  // 0x238 (0x238)
	struct FGameplayEventData K2Node_MakeStruct_GameplayEventData;  // 0x240 (0x240)
	struct FRotator CallFunc_K2_GetActorRotation_ReturnValue;  // 0x2F0 (0x2F0)
	struct TArray<struct FActiveGameplayEffectHandle> CallFunc_ApplyEffectContainer_ReturnValue;  // 0x308 (0x308)
	float CallFunc_BreakRotator_Roll;  // 0x318 (0x318)
	float CallFunc_BreakRotator_Pitch;  // 0x31C (0x31C)
	float CallFunc_BreakRotator_Yaw;  // [x320 ([x320)
	char pad_804[4];  // 0x324 (0x324)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue;  // 0x328 (0x328)
	struct FTransform CallFunc_MakeTransform_ReturnValue;  // 0x340 (0x340)
	float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;  // 0x3A0 (0x3A0)
	char pad_932[4];  // 0x3A4 (0x3A4)
	struct FRotator CallFunc_FindRelativeLookAtRotation_ReturnValue;  // 0x3A8 (0x3A8)
	double CallFunc_Multiply_DoubleDouble_ReturnValue;  // 0x3C0 (0x3C0)
	float CallFunc_BreakRotator_Roll_2;  // 0x3C8 (0x3C8)
	float CallFunc_BreakRotator_Pitch_2;  // 0x3CC (0x3CC)
	float CallFunc_BreakRotator_Yaw_2;  // 0x3D0 (0x3D0)
	char pad_980[4];  // 0x3D4 (0x3D4)
	double CallFunc_Subtract_DoubleDouble_ReturnValue;  // 0x3D8 (0x3D8)
	float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2;  // 0x3E0 (0x3E0)
	char pad_996_1 : 7;  // 0x3E4 (0x3E4)
	bool CallFunc_InRange_FloatFloat_ReturnValue : 1;  // 0x3E4 (0x3E4)
	char pad_997[3];  // 0x3E5 (0x3E5)
	double CallFunc_Multiply_DoubleDouble_ReturnValue_2;  // 0x3E8 (0x3E8)
	double CallFunc_Add_DoubleDouble_ReturnValue;  // 0x3F0 (0x3F0)
	double CallFunc_Subtract_DoubleDouble_ReturnValue_2;  // 0x3F8 (0x3F8)
	float CallFunc_GetScaledCapsuleRadius_ReturnValue;  // 0x400 (0x400)
	char pad_1028[4];  // 0x404 (0x404)
	struct FVector CallFunc_MakeVector_ReturnValue;  // 0x408 (0x408)
	double CallFunc_Multiply_DoubleDouble_ReturnValue_3;  // 0x420 (0x420)
	struct FVector CallFunc_Conv_DoubleToVector_ReturnValue;  // 0x428 (0x428)
	float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_3;  // 0x440 (0x440)
	char pad_1092[4];  // 0x444 (0x444)
	double CallFunc_Multiply_DoubleDouble_ReturnValue_4;  // 0x448 (0x448)
	float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_4;  // 0x450 (0x450)
	char pad_1108[4];  // 0x454 (0x454)
	double CallFunc_Multiply_DoubleDouble_ReturnValue_5;  // 0x458 (0x458)
	float CallFunc_GetScaledCapsuleRadius_ReturnValue_2;  // 0x460 (0x460)
	char pad_1124[4];  // 0x464 (0x464)
	double CallFunc_Multiply_DoubleDouble_ReturnValue_6;  // 0x468 (0x468)
	float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_5;  // 0x470 (0x470)
	char pad_1140[4];  // 0x474 (0x474)
	struct FVector CallFunc_Conv_DoubleToVector_ReturnValue_2;  // 0x478 (0x478)
	double CallFunc_Multiply_DoubleDouble_ReturnValue_7;  // 0x490 (0x490)
	struct FVector CallFunc_GetCapsuleBottomLocation_ReturnValue_2;  // 0x498 (0x498)
	float CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_6;  // 0x4B0 (0x4B0)
	char pad_1204[4];  // 0x4B4 (0x4B4)
	double CallFunc_BreakVector_X_2;  // 0x4B8 (0x4B8)
	double CallFunc_BreakVector_Y_2;  // 0x4C0 (0x4C0)
	double CallFunc_BreakVector_Z_2;  // 0x4C8 (0x4C8)
	double CallFunc_Multiply_DoubleDouble_ReturnValue_8;  // 0x4D0 (0x4D0)
	double CallFunc_Add_DoubleDouble_ReturnValue_2;  // 0x4D8 (0x4D8)
	double CallFunc_BreakVector_X_3;  // 0x4E0 (0x4E0)
	double CallFunc_BreakVector_Y_3;  // 0x4E8 (0x4E8)
	double CallFunc_BreakVector_Z_3;  // 0x4F0 (0x4F0)
	double CallFunc_Subtract_DoubleDouble_ReturnValue_3;  // 0x4F8 (0x4F8)
	double CallFunc_Add_DoubleDouble_ReturnValue_3;  // 0x500 (0x500)
	struct FVector CallFunc_MakeVector_ReturnValue_2;  // 0x508 (0x508)
	double CallFunc_Subtract_DoubleDouble_ReturnValue_4;  // 0x520 (0x520)
	struct FRotator CallFunc_FindLookAtRotation_ReturnValue;  // 0x528 (0x528)
	struct FVector CallFunc_MakeVector_ReturnValue_3;  // 0x540 (0x540)
	struct FVector CallFunc_GetRightVector_ReturnValue;  // 0x558 (0x558)
	double CallFunc_BreakVector_X_4;  // 0x570 (0x570)
	double CallFunc_BreakVector_Y_4;  // 0x578 (0x578)
	double CallFunc_BreakVector_Z_4;  // 0x580 (0x580)
	struct FVector CallFunc_Multiply_VectorVector_ReturnValue;  // 0x588 (0x588)
	double CallFunc_Add_DoubleDouble_ReturnValue_4;  // 0x5A0 (0x5A0)
	struct FVector CallFunc_Multiply_VectorVector_ReturnValue_2;  // 0x5A8 (0x5A8)
	double CallFunc_Subtract_DoubleDouble_ReturnValue_5;  // 0x5C0 (0x5C0)
	struct FVector CallFunc_Add_VectorVector_ReturnValue;  // 0x5C8 (0x5C8)
	struct FVector CallFunc_MakeVector_ReturnValue_4;  // 0x5E0 (0x5E0)
	struct FHitResult CallFunc_SphereTraceSingleForObjects_OutHit;  // 0x5F8 (0x5F8)
	char pad_1760_1 : 7;  // 0x6E0 (0x6E0)
	bool CallFunc_SphereTraceSingleForObjects_ReturnValue : 1;  // 0x6E0 (0x6E0)
	char pad_1761[7];  // 0x6E1 (0x6E1)
	double CallFunc_BreakVector_X_5;  // 0x6E8 (0x6E8)
	double CallFunc_BreakVector_Y_5;  // 0x6F0 (0x6F0)
	double CallFunc_BreakVector_Z_5;  // 0x6F8 (0x6F8)
	double CallFunc_Add_DoubleDouble_ReturnValue_5;  // 0x700 (0x700)
	double CallFunc_BreakVector_X_6;  // 0x708 (0x708)
	double CallFunc_BreakVector_Y_6;  // 0x710 (0x710)
	double CallFunc_BreakVector_Z_6;  // 0x718 (0x718)
	double CallFunc_Subtract_DoubleDouble_ReturnValue_6;  // 0x720 (0x720)
	double CallFunc_Add_DoubleDouble_ReturnValue_6;  // 0x728 (0x728)
	struct FVector CallFunc_MakeVector_ReturnValue_5;  // 0x730 (0x730)
	double CallFunc_Subtract_DoubleDouble_ReturnValue_7;  // 0x748 (0x748)
	struct FRotator CallFunc_FindLookAtRotation_ReturnValue_2;  // 0x750 (0x750)
	struct FVector CallFunc_MakeVector_ReturnValue_6;  // 0x768 (0x768)
	struct FVector CallFunc_GetRightVector_ReturnValue_2;  // 0x780 (0x780)
	struct FVector CallFunc_Multiply_VectorVector_ReturnValue_3;  // 0x798 (0x798)
	struct UAbilityTask_WaitGameplayEvent* CallFunc_WaitGameplayEvent_ReturnValue;  // 0x7B0 (0x7B0)
	struct FVector CallFunc_Add_VectorVector_ReturnValue_2;  // 0x7B8 (0x7B8)
	struct FHitResult CallFunc_SphereTraceSingleForObjects_OutHit_2;  // 0x7D0 (0x7D0)
	char pad_2232_1 : 7;  // 0x8B8 (0x8B8)
	bool CallFunc_SphereTraceSingleForObjects_ReturnValue_2 : 1;  // 0x8B8 (0x8B8)
	char pad_2233_1 : 7;  // 0x8B9 (0x8B9)
	bool CallFunc_IsValid_ReturnValue : 1;  // 0x8B9 (0x8B9)
	char pad_2234[6];  // 0x8BA (0x8BA)
	struct FGameplayEventData Temp_struct_Variable;  // 0x8C0 (0x8C0)
	struct FGameplayEventData K2Node_CustomEvent_Payload;  // 0x970 (0x970)
	struct FDelegate K2Node_CreateDelegate_OutputDelegate;  // 0xA20 (0xA20)
	int32_t Temp_int_Loop_Counter_Variable;  // 0xA30 (0xA30)
	char pad_2612[4];  // 0xA34 (0xA34)
	struct TArray<struct AActor*> Temp_object_Variable_3;  // 0xA38 (0xA38)
	int32_t CallFunc_Subtract_IntInt_ReturnValue_2;  // 0xA48 (0xA48)
	char pad_2636_1 : 7;  // 0xA4C (0xA4C)
	bool CallFunc_GreaterEqual_IntInt_ReturnValue : 1;  // 0xA4C (0xA4C)
	char pad_2637[3];  // 0xA4D (0xA4D)
	struct TArray<enum class EObjectTypeQuery> K2Node_MakeArray_Array_3;  // 0xA50 (0xA50)
	struct FHitResult CallFunc_SphereTraceSingleForObjects_OutHit_3;  // 0xA60 (0xA60)
	char pad_2888_1 : 7;  // 0xB48 (0xB48)
	bool CallFunc_SphereTraceSingleForObjects_ReturnValue_3 : 1;  // 0xB48 (0xB48)
	char pad_2889[7];  // 0xB49 (0xB49)
	double CallFunc_Subtract_DoubleDouble_B_ImplicitCast;  // 0xB50 (0xB50)
	double CallFunc_Multiply_DoubleDouble_A_ImplicitCast;  // 0xB58 (0xB58)
	double CallFunc_Subtract_DoubleDouble_A_ImplicitCast;  // 0xB60 (0xB60)
	double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;  // 0xB68 (0xB68)
	double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;  // 0xB70 (0xB70)
	double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4;  // 0xB78 (0xB78)
	double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5;  // 0xB80 (0xB80)
	double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6;  // 0xB88 (0xB88)
	double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_7;  // 0xB90 (0xB90)
	double CallFunc_Multiply_DoubleDouble_A_ImplicitCast_8;  // 0xB98 (0xB98)


}; 
 
 