#pragma once 
#include <SDK_Engine_Objects.h> 
 
 
// Function BTD_CheckTarget.BTD_CheckTarget_C.FilterHP
struct FFilterHP
{
	char pad_0_1 : 7;  // 0x0 (0x0)
	bool bool : 1;  // 0x0 (0x0)
	char pad_1[3];  // 0x1 (0x1)
	int32_t Temp_int_Array_Index_Variable;  // 0x4 (0x4)
	int32_t Temp_int_Loop_Counter_Variable;  // 0x8 (0x8)
	int32_t CallFunc_Subtract_IntInt_ReturnValue;  // 0xC (0xC)
	char pad_16_1 : 7;  // 0x10 (0x10)
	bool CallFunc_GreaterEqual_IntInt_ReturnValue : 1;  // 0x10 (0x10)
	char pad_17[3];  // 0x11 (0x11)
	int32_t Temp_int_Array_Index_Variable_2;  // 0x14 (0x14)
	int32_t Temp_int_Loop_Counter_Variable_2;  // 0x18 (0x18)
	int32_t CallFunc_Subtract_IntInt_ReturnValue_2;  // 0x1C (0x1C)
	char pad_32_1 : 7;  // 0x20 (0x20)
	bool CallFunc_GreaterEqual_IntInt_ReturnValue_2 : 1;  // 0x20 (0x20)
	char pad_33[3];  // 0x21 (0x21)
	int32_t CallFunc_Array_Length_ReturnValue;  // 0x24 (0x24)
	char pad_40_1 : 7;  // 0x28 (0x28)
	bool CallFunc_GreaterEqual_IntInt_ReturnValue_3 : 1;  // 0x28 (0x28)
	char pad_41[7];  // 0x29 (0x29)
	struct ADCCharacterBase* CallFunc_Array_Get_Item;  // 0x30 (0x30)
	int32_t CallFunc_Array_Length_ReturnValue_2;  // 0x38 (0x38)
	char pad_60_1 : 7;  // 0x3C (0x3C)
	bool CallFunc_Array_RemoveItem_ReturnValue : 1;  // 0x3C (0x3C)
	char pad_61[3];  // 0x3D (0x3D)
	int32_t CallFunc_Subtract_IntInt_ReturnValue_3;  // 0x40 (0x40)
	char pad_68_1 : 7;  // 0x44 (0x44)
	bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute : 1;  // 0x44 (0x44)
	char pad_69[3];  // 0x45 (0x45)
	float CallFunc_GetFloatAttribute_ReturnValue;  // 0x48 (0x48)
	int32_t CallFunc_Max_ReturnValue;  // 0x4C (0x4C)
	char pad_80_1 : 7;  // 0x50 (0x50)
	bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_2 : 1;  // 0x50 (0x50)
	char pad_81[3];  // 0x51 (0x51)
	float CallFunc_GetFloatAttribute_ReturnValue_2;  // 0x54 (0x54)
	double CallFunc_Divide_DoubleDouble_ReturnValue;  // 0x58 (0x58)
	double CallFunc_Multiply_DoubleDouble_ReturnValue;  // 0x60 (0x60)
	char pad_104_1 : 7;  // 0x68 (0x68)
	bool CallFunc_Greater_DoubleDouble_ReturnValue : 1;  // 0x68 (0x68)
	char pad_105[7];  // 0x69 (0x69)
	struct ADCCharacterBase* CallFunc_Array_Get_Item_2;  // 0x70 (0x70)
	char pad_120_1 : 7;  // 0x78 (0x78)
	bool CallFunc_Array_RemoveItem_ReturnValue_2 : 1;  // 0x78 (0x78)
	char pad_121_1 : 7;  // 0x79 (0x79)
	bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_3 : 1;  // 0x79 (0x79)
	char pad_122[2];  // 0x7A (0x7A)
	float CallFunc_GetFloatAttribute_ReturnValue_3;  // 0x7C (0x7C)
	char pad_128_1 : 7;  // 0x80 (0x80)
	bool CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_4 : 1;  // 0x80 (0x80)
	char pad_129[3];  // 0x81 (0x81)
	float CallFunc_GetFloatAttribute_ReturnValue_4;  // 0x84 (0x84)
	int32_t CallFunc_Array_Length_ReturnValue_3;  // 0x88 (0x88)
	char pad_140[4];  // 0x8C (0x8C)
	double CallFunc_Divide_DoubleDouble_ReturnValue_2;  // 0x90 (0x90)
	int32_t CallFunc_Subtract_IntInt_ReturnValue_4;  // 0x98 (0x98)
	char pad_156[4];  // 0x9C (0x9C)
	double CallFunc_Multiply_DoubleDouble_ReturnValue_2;  // 0xA0 (0xA0)
	int32_t CallFunc_Max_ReturnValue_2;  // 0xA8 (0xA8)
	char pad_172_1 : 7;  // 0xAC (0xAC)
	bool CallFunc_Less_DoubleDouble_ReturnValue : 1;  // 0xAC (0xAC)
	char pad_173[3];  // 0xAD (0xAD)
	double CallFunc_Divide_DoubleDouble_B_ImplicitCast;  // 0xB0 (0xB0)
	double CallFunc_Divide_DoubleDouble_A_ImplicitCast;  // 0xB8 (0xB8)
	double CallFunc_Divide_DoubleDouble_B_ImplicitCast_2;  // 0xC0 (0xC0)
	double CallFunc_Divide_DoubleDouble_A_ImplicitCast_2;  // 0xC8 (0xC8)


}; 
 
 // Function BTD_CheckTarget.BTD_CheckTarget_C.FilterRange
struct FFilterRange
{
	char pad_0_1 : 7;  // 0x0 (0x0)
	bool bool : 1;  // 0x0 (0x0)
	char pad_1_1 : 7;  // 0x1 (0x1)
	bool CallFunc_Get_Max_Distance_From_Perception_Result : 1;  // 0x1 (0x1)
	char pad_2[6];  // 0x2 (0x2)
	double CallFunc_Get_Max_Distance_From_Perception_Return_Value;  // 0x8 (0x8)
	char pad_16_1 : 7;  // 0x10 (0x10)
	bool CallFunc_Get_Max_Distance_From_Perception_Result_2 : 1;  // 0x10 (0x10)
	char pad_17[7];  // 0x11 (0x11)
	double CallFunc_Get_Max_Distance_From_Perception_Return_Value_2;  // 0x18 (0x18)
	char pad_32_1 : 7;  // 0x20 (0x20)
	bool K2Node_SwitchEnum_CmpSuccess : 1;  // 0x20 (0x20)
	char pad_33_1 : 7;  // 0x21 (0x21)
	bool CallFunc_FilterTargetsOverDistance_ReturnValue : 1;  // 0x21 (0x21)
	char pad_34_1 : 7;  // 0x22 (0x22)
	bool CallFunc_FilterTargetsOverXYRange_ReturnValue : 1;  // 0x22 (0x22)
	char pad_35_1 : 7;  // 0x23 (0x23)
	bool CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue : 1;  // 0x23 (0x23)
	float CallFunc_GetVisionAngle_ReturnValue;  // 0x24 (0x24)
	char pad_40_1 : 7;  // 0x28 (0x28)
	bool CallFunc_EqualEqual_DoubleDouble_ReturnValue : 1;  // 0x28 (0x28)
	char pad_41_1 : 7;  // 0x29 (0x29)
	bool CallFunc_FilterTargetsWithinXYRange_ReturnValue : 1;  // 0x29 (0x29)
	char pad_42_1 : 7;  // 0x2A (0x2A)
	bool CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_ReturnValue_2 : 1;  // 0x2A (0x2A)
	char pad_43_1 : 7;  // 0x2B (0x2B)
	bool K2Node_SwitchEnum_CmpSuccess_2 : 1;  // 0x2B (0x2B)
	char pad_44_1 : 7;  // 0x2C (0x2C)
	bool CallFunc_FilterTargetsWithinDistance_ReturnValue : 1;  // 0x2C (0x2C)
	char pad_45[3];  // 0x2D (0x2D)
	float CallFunc_FilterTargetsOverDistance_Distance_ImplicitCast;  // 0x30 (0x30)
	float CallFunc_FilterTargetsOverXYRange_XYRange_ImplicitCast;  // 0x34 (0x34)
	float CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_AllowedAngle_ImplicitCast;  // 0x38 (0x38)
	float CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast;  // 0x3C (0x3C)
	float CallFunc_FilterTargetsWithinDirectionAngleAndAllowedAngle_DirectionalAngle_ImplicitCast_2;  // 0x40 (0x40)
	float CallFunc_FilterTargetsWithinXYRange_XYRange_ImplicitCast;  // 0x44 (0x44)
	float CallFunc_FilterTargetsWithinDistance_Distance_ImplicitCast;  // 0x48 (0x48)


}; 
 
 // Function BTD_CheckTarget.BTD_CheckTarget_C.FilterTags
struct FFilterTags
{
	char pad_0_1 : 7;  // 0x0 (0x0)
	bool bool : 1;  // 0x0 (0x0)
	char pad_1[3];  // 0x1 (0x1)
	int32_t Temp_int_Loop_Counter_Variable;  // 0x4 (0x4)
	int32_t CallFunc_Add_IntInt_ReturnValue;  // 0x8 (0x8)
	int32_t Temp_int_Array_Index_Variable;  // 0xC (0xC)
	int32_t CallFunc_Array_Length_ReturnValue;  // 0x10 (0x10)
	int32_t CallFunc_Array_Length_ReturnValue_2;  // 0x14 (0x14)
	char pad_24_1 : 7;  // 0x18 (0x18)
	bool CallFunc_Less_IntInt_ReturnValue : 1;  // 0x18 (0x18)
	char pad_25_1 : 7;  // 0x19 (0x19)
	bool CallFunc_Less_IntInt_ReturnValue_2 : 1;  // 0x19 (0x19)
	char pad_26[2];  // 0x1A (0x1A)
	int32_t Temp_int_Loop_Counter_Variable_2;  // 0x1C (0x1C)
	int32_t CallFunc_Array_Length_ReturnValue_3;  // 0x20 (0x20)
	int32_t CallFunc_Add_IntInt_ReturnValue_2;  // 0x24 (0x24)
	char pad_40_1 : 7;  // 0x28 (0x28)
	bool CallFunc_Less_IntInt_ReturnValue_3 : 1;  // 0x28 (0x28)
	char pad_41[3];  // 0x29 (0x29)
	int32_t Temp_int_Array_Index_Variable_2;  // 0x2C (0x2C)
	struct FGameplayTag CallFunc_Array_Get_Item;  // 0x30 (0x30)
	int32_t CallFunc_Array_Length_ReturnValue_4;  // 0x38 (0x38)
	char pad_60_1 : 7;  // 0x3C (0x3C)
	bool CallFunc_FilterUnTagedTargets_ReturnValue : 1;  // 0x3C (0x3C)
	char pad_61_1 : 7;  // 0x3D (0x3D)
	bool CallFunc_Less_IntInt_ReturnValue_4 : 1;  // 0x3D (0x3D)
	char pad_62[2];  // 0x3E (0x3E)
	struct FGameplayTag CallFunc_Array_Get_Item_2;  // 0x40 (0x40)
	int32_t CallFunc_Array_Length_ReturnValue_5;  // 0x48 (0x48)
	char pad_76_1 : 7;  // 0x4C (0x4C)
	bool CallFunc_FilterTagedTargets_ReturnValue : 1;  // 0x4C (0x4C)
	char pad_77_1 : 7;  // 0x4D (0x4D)
	bool CallFunc_Less_IntInt_ReturnValue_5 : 1;  // 0x4D (0x4D)
	char pad_78[2];  // 0x4E (0x4E)
	int32_t CallFunc_Array_Length_ReturnValue_6;  // 0x50 (0x50)
	char pad_84_1 : 7;  // 0x54 (0x54)
	bool CallFunc_Less_IntInt_ReturnValue_6 : 1;  // 0x54 (0x54)


}; 
 
 // Function BTD_CheckTarget.BTD_CheckTarget_C.PerformConditionCheckAI
// Size: 0xD1(Inherited: 0x18)
struct FPerformConditionCheckAI : FPerformConditionCheckAI
{
	struct AAIController* OwnerController;  // 0x0 (0x0)
	struct APawn* ControlledPawn;  // 0x8 (0x8)
	char pad_40_1 : 7;  // 0x28 (0x28)
	bool ReturnValue : 1;  // 0x10 (0x10)
	struct ABP_DCMonsterBaseWithOptions_C* K2Node_DynamicCast_AsBP_DCMonster_Base_with_Options;  // 0x18 (0x18)
	char pad_49_1 : 7;  // 0x31 (0x31)
	bool K2Node_DynamicCast_bSuccess : 1;  // 0x20 (0x20)
	struct UAIPerceptionComponent* CallFunc_GetAIPerceptionComponent_ReturnValue;  // 0x28 (0x28)
	struct UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue;  // 0x30 (0x30)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue;  // 0x38 (0x38)
	char pad_90_1 : 7;  // 0x5A (0x5A)
	bool CallFunc_Filter_Target_From_Spawn_Location_Return_Value : 1;  // 0x50 (0x50)
	struct TArray<struct ADCCharacterBase*> CallFunc_Filter_Target_From_Spawn_Location_Result;  // 0x58 (0x58)
	char pad_107_1 : 7;  // 0x6B (0x6B)
	bool CallFunc_FilterHP_Bool : 1;  // 0x68 (0x68)
	char pad_108[4];  // 0x6C (0x6C)
	struct UObject* CallFunc_GetValueAsObject_ReturnValue;  // 0x70 (0x70)
	struct ADCCharacterBase* K2Node_DynamicCast_AsDCCharacter_Base;  // 0x78 (0x78)
	char pad_128_1 : 7;  // 0x80 (0x80)
	bool K2Node_DynamicCast_bSuccess_2 : 1;  // 0x80 (0x80)
	char pad_129[7];  // 0x81 (0x81)
	struct FVector CallFunc_K2_GetActorLocation_ReturnValue_2;  // 0x88 (0x88)
	int32_t CallFunc_Array_Add_ReturnValue;  // 0xA0 (0xA0)
	char pad_164_1 : 7;  // 0xA4 (0xA4)
	bool CallFunc_Filter_Target_From_Spawn_Location_Return_Value_2 : 1;  // 0xA4 (0xA4)
	char pad_165[3];  // 0xA5 (0xA5)
	struct TArray<struct ADCCharacterBase*> CallFunc_Filter_Target_From_Spawn_Location_Result_2;  // 0xA8 (0xA8)
	char pad_184_1 : 7;  // 0xB8 (0xB8)
	bool CallFunc_IsValid_ReturnValue : 1;  // 0xB8 (0xB8)
	char pad_185_1 : 7;  // 0xB9 (0xB9)
	bool CallFunc_FilterRange_Bool : 1;  // 0xB9 (0xB9)
	char pad_186_1 : 7;  // 0xBA (0xBA)
	bool CallFunc_FilterTags_Bool : 1;  // 0xBA (0xBA)
	char pad_187_1 : 7;  // 0xBB (0xBB)
	bool CallFunc_TargetingType_Bool : 1;  // 0xBB (0xBB)
	char pad_188_1 : 7;  // 0xBC (0xBC)
	bool CallFunc_Get_Target_Array_Return_Value : 1;  // 0xBC (0xBC)
	char pad_189[3];  // 0xBD (0xBD)
	struct TArray<struct ADCCharacterBase*> CallFunc_Get_Target_Array_TargetArray;  // 0xC0 (0xC0)
	char pad_208_1 : 7;  // 0xD0 (0xD0)
	bool CallFunc_EqualEqual_ObjectObject_ReturnValue : 1;  // 0xD0 (0xD0)


}; 
 
 // Function BTD_CheckTarget.BTD_CheckTarget_C.TargetingType
struct FTargetingType
{
	char pad_0_1 : 7;  // 0x0 (0x0)
	bool bool : 1;  // 0x0 (0x0)
	char pad_1[3];  // 0x1 (0x1)
	int32_t CallFunc_Array_Length_ReturnValue;  // 0x4 (0x4)
	char pad_8_1 : 7;  // 0x8 (0x8)
	bool CallFunc_Less_IntInt_ReturnValue : 1;  // 0x8 (0x8)


}; 
 
 